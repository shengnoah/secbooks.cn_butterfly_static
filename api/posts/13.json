{"total":629,"pageSize":12,"pageCount":53,"data":[{"title":"平方和公式","uid":"ac01f7e97a697c6edaad9a52a52d8a36","slug":"math/平方和公式","date":"2024-03-16T11:44:51.821Z","updated":"2024-03-16T11:44:51.821Z","comments":true,"path":"api/articles/math/平方和公式.json","cover":null,"text":" 平方和公式 平方和公式是什么， 用Python如何求（a+b)的平方的结果。 平方根公式是指对于任意实数a和b，有以下公式成立： (a + b)² = a² + 2ab + b² 要用Python求(a+b)的平方，可以使用以下代码： 123456a = 3b = 4resul...","link":"","photos":[],"count_time":{"symbolsCount":379,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":4,"path":"api/categories/数学.json"}],"tags":[{"name":"平方和公式","slug":"平方和公式","count":1,"path":"api/tags/平方和公式.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"mac say文字转语音","uid":"fdaf3a4aaab4da898c02189280754dc0","slug":"mac/mac say文字转语音","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/mac/mac say文字转语音.json","cover":null,"text":" mac say文字转语音 在 macOS 系统下，你可以使用内置的 say 命令将文本转换为语音1。以下是具体的步骤： 新建一个 TXT 文稿，我们取名为 my.txt，然后在 TXT 文件里写入你想要转换的内容，关闭保存1。 打开终端，输入 cd Documents 然后回车...","link":"","photos":[],"count_time":{"symbolsCount":280,"symbolsTime":"1 mins."},"categories":[{"name":"Mac","slug":"Mac","count":1,"path":"api/categories/Mac.json"}],"tags":[{"name":"Mac","slug":"Mac","count":1,"path":"api/tags/Mac.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"lua/2016-06-11-for","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/2016-06-11-for.json","cover":[],"text":"#Lua 中的 for 循环 for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 ##语法 Lua 语言中 for 循环的语法如下： 1234for init,max/min value, incrementdo statement(s)end 下面是 for 循...","link":"","photos":[],"count_time":{"symbolsCount":483,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":2,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":1,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":1,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":1,"path":"api/tags/basic.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"lua/2016-06-01-while","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/2016-06-01-while.json","cover":null,"text":"#Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 #语法 Lua 语言中 while 循环的语法如下所示： 1234567891011121314151617while(condit...","link":"","photos":[],"count_time":{"symbolsCount":627,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"《纯数学课程》-哈代 LaTeX 代码下载","uid":"72c18236192225748cd4bbf4416994df","slug":"math/《纯数学课程》-哈代 LaTeX 代码下载","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.821Z","comments":true,"path":"api/articles/math/《纯数学课程》-哈代 LaTeX 代码下载.json","cover":[],"text":" 《纯数学课程》-哈代 LaTeX 代码下载 发布于 2023-12-30 23:19:07 A Course of Pure Mathematics（纯数学课程）是英国数学家G. H. Hardy和E. M. Wright合著的一部数学教科书，首次出版于1934年。这本书涵盖了...","link":"","photos":[],"count_time":{"symbolsCount":703,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"math","slug":"AIGC/math","count":2,"path":"api/categories/AIGC/math.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Table复制","uid":"f35637f6fb4f2abf97cdd32ce0593fe7","slug":"lua/luatest/Table复制","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/luatest/Table复制.json","cover":null,"text":" Table复制 构造一个lua table变量，然后对这个变量在调用函数进行制和专递。 可以使用以下代码构造一个Lua table变量，并调用函数进行传递： 12345678910111213141516-- 构造一个Lua table变量local myTable = { n...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Lua","slug":"Lua","count":2,"path":"api/categories/Lua.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"repeat...until 循环","uid":"17f717e08ff041fef49c1fa8a71c5669","slug":"lua/2016-06-01-repeat-until","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-repeat-until.json","cover":null,"text":"#repeat…until 循环 与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。 除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。 ...","link":"","photos":[],"count_time":{"symbolsCount":596,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua标准库","uid":"fa374b256846497ad36372533ba9888a","slug":"lua/2016-06-01-standard-libraries","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-standard-libraries.json","cover":null,"text":" Lua 标准库 Lua 标准库利用 C 语言 API 实现并提供了丰富的函数，它们内置于 Lua 语言中。该标准库不仅可以提供 Lua 语言内服务，还能提供外部服务，比如文件或数据库的操作。 这些标准库使用标准的 C API 接口实现，它们作为独立的 C 语言模块提供给使用者。...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua字符串","uid":"cedbdf206a63ba0896535fb39f386996","slug":"lua/2016-06-01-strings","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-strings.json","cover":null,"text":" Lua 字符串 字符串就是一个由字符或控制字符组成的序列。字符串可以用以下三种方式任意一种进行初始化。 单引号字符串 双引号字符串 [[和]]之间的字符串 上面三种初始化方式的示例如下： 1234567891011string1 = \"Lua\"print(\"\\\"String 1...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua表","uid":"038bf88a1c7598385fc79ad2a48f60ba","slug":"lua/2016-06-01-tables","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-tables.json","cover":null,"text":" Lua 表 在 Lua 语言中，表是唯一可以用来创建不同数据类型的数据结构，比如常见的数组和字典都是用表来创建的。 Lua 语言中经常到关联数组这种数据类型，它不仅可以用数值作为索引值，除了 nil 以外的字符串同样可以作为其索引。表没有固定的大小，当数据量增加时表会自动增大。...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的变量","uid":"00031c756df5944ae03766354a37e479","slug":"lua/2016-06-01-variables","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-variables.json","cover":null,"text":" 变量 变量就是给一块内存区域赋予的一个名字。变量使得在程序中就可以修改或读取相应的内存区域中的内容。它可以代表各种不同类型的值，包括函数与表。 变量的名字由字母、数字与下划线组成。它必须是字母或下划线开头。由于 Lua 是字母大小写敏感的，所以大写字母与小写字母是不一样的。Lu...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"操作符","uid":"67d9d5e60b37525bc4954f8a5bb0acb9","slug":"lua/2016-06-01-operators","date":"2024-03-16T11:44:51.818Z","updated":"2024-03-16T11:44:51.818Z","comments":true,"path":"api/articles/lua/2016-06-01-operators.json","cover":null,"text":" 操作符 操作符是用于告诉解释器执行特定的数学或逻辑运算的符号。Lua 语言有丰富的内置操作符，主要包括以下几类： 算术运算操作符 关系运算操作符 逻辑运算操作符 其它操作符 这篇教程将会依次介绍以上四类操作符。 算术去处操作符 下面的表中列出了所有 Lua 语言支持的算术运算操...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}