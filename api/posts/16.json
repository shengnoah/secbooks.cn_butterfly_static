{"total":629,"pageSize":12,"pageCount":53,"data":[{"title":"Break语句","uid":"1e07952645adeb0063307933aff99e35","slug":"lua/2016-06-01-break","date":"2024-03-17T14:44:57.270Z","updated":"2024-03-16T11:44:51.813Z","comments":true,"path":"api/articles/lua/2016-06-01-break.json","cover":null,"text":"#break 语句 程序在解释执行过程中，在循环内遇到 break 语句时，循环将立即结束。程序将循环语句的下一条语句开始执行。 如果你是在嵌套循环（即，一个循环内还有一个循环语句）内使用 break 语句，break 只结束内层循环，并从该代码块后的第一条语句处开始执行。 语法...","link":"","photos":[],"count_time":{"symbolsCount":588,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua基本语法","uid":"9b97fd5c58ceb41de2e73474e4dfb1f8","slug":"lua/2016-06-01-basic-syntax","date":"2024-03-17T14:44:57.266Z","updated":"2024-03-16T11:44:51.812Z","comments":true,"path":"api/articles/lua/2016-06-01-basic-syntax.json","cover":null,"text":" 基本语法 Lua 学起来非常简单。现在，让我们开始创建我们的第一个 Lua 程序吧！ 第一个 Lua 程序 Lua 提供交互式编程模式。在这个模式下，你可以一条一条地输入命令，然后立即就可以得到结果。你可以在 shell 中使用 lua -i 或者 lua 命令启动。输入命令后...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"lua/2016-06-01-arrays","date":"2024-03-17T14:44:57.263Z","updated":"2024-03-16T11:44:51.812Z","comments":true,"path":"api/articles/lua/2016-06-01-arrays.json","cover":null,"text":" Lua 数组 数组是一组有序的对象排列，既可以是一维的也可以是多维的。 在 Lua 语言中，数组是用整数索引表实现的。数组的大小并不固定，随着数组元素的增加，它可以动态地增加内存空间大小。 一维数组 一维数组可以使用一个简单的表结构表示。可以通过一个简单循环初始化数组或者读取数...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":2,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"NMAP扫描主机开发的端口","uid":"7df51df4529217f4655b03a0bc83e0ff","slug":"linux/kali/NMAP扫描主机开发的端口","date":"2024-03-17T14:44:57.257Z","updated":"2024-03-16T11:44:51.810Z","comments":true,"path":"api/articles/linux/kali/NMAP扫描主机开发的端口.json","cover":null,"text":" NMAP扫描主机开发的端口 如何用NMap扫描主机的端口，那些是开放的。 要使用NMap扫描主机的端口，并确定哪些是开放的，可以按照以下步骤进行： 下载和安装NMap：从官方网站（https://nmap.org）下载适用于您的操作系统的NMap安装程序，并完成安装。 打开终端...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kali","slug":"kali","count":1,"path":"api/categories/kali.json"},{"name":"nmap","slug":"kali/nmap","count":1,"path":"api/categories/kali/nmap.json"}],"tags":[{"name":"nmap","slug":"nmap","count":1,"path":"api/tags/nmap.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"汇编语言实现Basic","uid":"84194321ed7a1438454fe622f34bf356","slug":"linux/汇编语言实现Basic","date":"2024-03-17T14:44:57.251Z","updated":"2024-03-16T11:44:51.811Z","comments":true,"path":"api/articles/linux/汇编语言实现Basic.json","cover":null,"text":" 汇编语言实现Basic 用汇编语言，写一个Basic语言的编译器 编写一个完整的Basic语言编译器需要大量的工作和代码，因此在这里只提供一个简单的示例，以展示如何将Basic语言转换为汇编语言。 1234567891011121314151617181920212223242...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"查看进程打文件大小","uid":"e91abac01034f4c3267537e7e279ad34","slug":"linux/查看进程打文件大小","date":"2024-03-17T14:44:57.248Z","updated":"2024-03-16T11:44:51.811Z","comments":true,"path":"api/articles/linux/查看进程打文件大小.json","cover":null,"text":" 查看进程打文件大小 如何查看Linux那个进程的打开了大文件 要查看Linux中哪个进程打开了大文件，可以使用lsof命令。lsof是一个用于显示已打开的文件的工具。 以下是使用lsof命令来查看Linux中哪个进程打开了大文件的步骤： 打开终端。 输入以下命令并按下Enter...","link":"","photos":[],"count_time":{"symbolsCount":418,"symbolsTime":"1 mins."},"categories":[{"name":"知识","slug":"知识","count":11,"path":"api/categories/知识.json"}],"tags":[{"name":"心里学","slug":"心里学","count":10,"path":"api/tags/心里学.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"如何看RPM文件安装的位置","uid":"145d446aa776a5e466b322bb34339497","slug":"linux/如何看RPM文件安装的位置","date":"2024-03-17T14:44:57.245Z","updated":"2024-03-16T11:44:51.811Z","comments":true,"path":"api/articles/linux/如何看RPM文件安装的位置.json","cover":null,"text":" 如何看RPM文件安装的位置 如何能知道在Linux上安装的PRM具体安装到了什么位置在 Linux中，可以使用lsmod命令来查看所有模块的列表，然后通过输入modprobe <模块名>来加载模块。如果您想知道安装到了什么位置，可以使用lsmod命令并输入-l选项来列出所有模块...","link":"","photos":[],"count_time":{"symbolsCount":813,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"如何查看Linux的RPM安装包安装文件的目录","uid":"48abcf7000096b713f7adec4c94e4012","slug":"linux/如何查看Linux的RPM安装包安装文件的目录","date":"2024-03-17T14:44:57.242Z","updated":"2024-03-16T11:44:51.811Z","comments":true,"path":"api/articles/linux/如何查看Linux的RPM安装包安装文件的目录.json","cover":null,"text":" 如何查看Linux的RPM安装包安装文件的目录 如何查看Linux的RPM安装包安装文件的目录 要查看Linux上RPM安装包的安装文件目录，可以使用以下命令： 列出已安装的RPM包： 1rpm -qa 查找特定RPM包的安装目录： 1rpm -ql <package_name...","link":"","photos":[],"count_time":{"symbolsCount":214,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"rsync同步本地文件到远程服务器","uid":"fdf5523b962ad37a37098f0c3f441f33","slug":"linux/rsync同步本地文件到远程服务器","date":"2024-03-17T14:44:57.237Z","updated":"2024-03-16T11:44:51.811Z","comments":true,"path":"api/articles/linux/rsync同步本地文件到远程服务器.json","cover":null,"text":" rsync同步本地文件到远程服务器 如何将本地的一个目录，rsync同步到目的服务器/data0/sd目录下1. 首先，您需要在目标服务器上安装rsync。 2. 然后，您可以使用以下命令将本地目录同步到目的服务器/data0/sd目录： 1rsync -avz -e \"ssh...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":4,"path":"api/tags/linux.json"},{"name":"rsync","slug":"rsync","count":3,"path":"api/tags/rsync.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lsof命令","uid":"908bb14a39f34acac1b8c6da5e195381","slug":"linux/lsof命令","date":"2024-03-17T14:44:57.234Z","updated":"2024-03-16T11:44:51.810Z","comments":true,"path":"api/articles/linux/lsof命令.json","cover":null,"text":" lsof命令 lsof 除了-i参数，还有那些参数可使用 除了-i参数，lsof命令还有以下常用参数可使用： -p ：显示指定进程ID所打开的文件列表。 -u ：显示指定用户名所打开的文件列表。 -c ：显示指定命令名所打开的文件列表。 -t：仅显示进程ID，不显示其他信息。 ...","link":"","photos":[],"count_time":{"symbolsCount":439,"symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"},{"name":"lsof","slug":"linux/lsof","count":1,"path":"api/categories/linux/lsof.json"}],"tags":[{"name":"lsof","slug":"lsof","count":1,"path":"api/tags/lsof.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Linux查看CPU内存硬盘大小的命令","uid":"0a67ef7b868dad2d1302f7dda41cf2d2","slug":"linux/Linux查看CPU内存硬盘大小的命令","date":"2024-03-17T14:44:57.231Z","updated":"2024-03-16T11:44:51.809Z","comments":true,"path":"api/articles/linux/Linux查看CPU内存硬盘大小的命令.json","cover":null,"text":" Linux查看CPU内存硬盘大小的命令 如何用命令查Linux系统CPU核数、内存大小、磁盘的总容量 要查看Linux系统的CPU核数，可以使用以下命令： 1cat /proc/cpuinfo | grep \"processor\" | wc -l 要查看Linux系统的内存大小...","link":"","photos":[],"count_time":{"symbolsCount":909,"symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"}],"tags":[{"name":"cpu","slug":"cpu","count":1,"path":"api/tags/cpu.json"},{"name":"内存","slug":"内存","count":1,"path":"api/tags/内存.json"},{"name":"硬盘","slug":"硬盘","count":1,"path":"api/tags/硬盘.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Linux下命令工具箱","uid":"1d8bd87db6e909e4afecaef1ed59c41b","slug":"linux/Linux下命令工具箱","date":"2024-03-17T14:44:57.228Z","updated":"2024-03-17T14:50:43.783Z","comments":true,"path":"api/articles/linux/Linux下命令工具箱.json","cover":null,"text":" Linux下命令工具箱 z.lua + ripgrep + fzf + fish shell + starship + exa + lazygit + byobu + spacevim + zed z.lua目录跳转 zsh配置 .zshrc eval \"$(lua /path...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"}],"tags":[{"name":"zsh","slug":"zsh","count":1,"path":"api/tags/zsh.json"},{"name":"fishell","slug":"fishell","count":1,"path":"api/tags/fishell.json"},{"name":"fzf","slug":"fzf","count":1,"path":"api/tags/fzf.json"},{"name":"riggrep","slug":"riggrep","count":1,"path":"api/tags/riggrep.json"},{"name":"starship","slug":"starship","count":1,"path":"api/tags/starship.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}