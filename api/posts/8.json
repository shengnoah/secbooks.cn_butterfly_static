{"total":629,"pageSize":12,"pageCount":53,"data":[{"title":"SD安装失败的总结","uid":"05b362c6dec32eeac664da3321842b99","slug":"python/SD安装失败的总结","date":"2024-03-16T11:44:51.911Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/SD安装失败的总结.json","cover":null,"text":" SD安装失败的总结 sd 安装过程 1.下载webui git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git 2.安装包下载太慢,可以指定清华源 -i http://pypi.tuna.tsi...","link":"","photos":[],"count_time":{"symbolsCount":897,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cuDNN","uid":"95e90514163f2adead82ccfd062b2e72","slug":"python/codna/cuDNN","date":"2024-03-16T11:44:51.911Z","updated":"2024-03-16T11:44:51.912Z","comments":true,"path":"api/articles/python/codna/cuDNN.json","cover":null,"text":" cuDNN cuDNN（CUDA Deep Neural Network library）是一个用于加速深度神经网络计算的GPU加速库。它提供了高效的实现和优化，可以显著加快深度学习模型训练和推理的速度。 使用cuDNN，可以进行以下操作： 卷积神经网络（CNN）：cuDNN提...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"cuDNN","slug":"AIGC/cuDNN","count":1,"path":"api/categories/AIGC/cuDNN.json"}],"tags":[{"name":"cuDNN","slug":"cuDNN","count":1,"path":"api/tags/cuDNN.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Conda设置参数设置","uid":"c8f9ef0ce429539720d45bd27158e7b0","slug":"python/codna/Conda设置参数设置","date":"2024-03-16T11:44:51.911Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/codna/Conda设置参数设置.json","cover":null,"text":" Conda设置参数设置 在conda中如何设置.cache文件夹位置为/data0 要将conda中的.cache文件夹位置设置为/data0，可以按照以下步骤操作： 打开终端或命令提示符。 输入以下命令，将当前用户的~/.condarc文件复制到主目录下（如果该文件不存在则跳...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"conda","slug":"AIGC/conda","count":2,"path":"api/categories/AIGC/conda.json"}],"tags":[{"name":"conda","slug":"conda","count":3,"path":"api/tags/conda.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"conda init bash指令的作用","uid":"e610e4d512d51105e5370a7afc95aadf","slug":"python/codna/conda init bash指令的作用","date":"2024-03-16T11:44:51.911Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/codna/conda init bash指令的作用.json","cover":null,"text":" conda init bash指令的作用 conda init bash这条指令的作用是什么，conda init bash，对那些文件做了处理了变化，有没有对.bashrc文件添加了什么内容？ \"conda init bash\"命令的作用是将conda命令添加到bash sh...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":2,"path":"api/categories/python.json"},{"name":"conda","slug":"python/conda","count":1,"path":"api/categories/python/conda.json"}],"tags":[{"name":"conda","slug":"conda","count":3,"path":"api/tags/conda.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"用于多模式文档理解的布局感知生成语言模型","uid":"fdd0a7bc582d8610e53c9b2f7cf8673b","slug":"paper/用于多模式文档理解的布局感知生成语言模型","date":"2024-03-16T11:44:51.910Z","updated":"2024-03-16T11:44:51.910Z","comments":true,"path":"api/articles/paper/用于多模式文档理解的布局感知生成语言模型.json","cover":[],"text":" 用于多模式文档理解的布局感知生成语言模型 DocLLM: A layout-aware generative language model for multimodal document understanding （用于多模式文档理解的布局感知生成语言模型） 论文：arxiv...","link":"","photos":[],"count_time":{"symbolsCount":597,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"视频生成模型：构建虚拟世界的模拟器","uid":"8acb019eb4d4e800260b2c7eda03a5c4","slug":"paper/视频生成模型：构建虚拟世界的模拟器","date":"2024-03-16T11:44:51.910Z","updated":"2024-03-16T11:44:51.910Z","comments":true,"path":"api/articles/paper/视频生成模型：构建虚拟世界的模拟器.json","cover":null,"text":" 视频生成模型：构建虚拟世界的模拟器 翻译了OpenAI关于Sora相关的技术报告：《Video generation models as world simulators | 视频生成模型：构建虚拟世界的模拟器》 这篇技术报告主要介绍了两方面内容：(1) OpenAI如何将各种...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Python显示request请求的响应时间戳","uid":"02ac3d01366c7a352094c19df12c098f","slug":"python/Python显示request请求的响应时间戳","date":"2024-03-16T11:44:51.910Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/Python显示request请求的响应时间戳.json","cover":null,"text":" Python显示request请求的响应时间戳 Python显示request请求的响应时间戳 要显示Python的request请求的响应时间戳，可以使用time模块来获取请求开始和结束的时间，并计算它们之间的差异。以下是一个示例代码： 1234567891011121314...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"python","slug":"AIGC/python","count":1,"path":"api/categories/AIGC/python.json"}],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Python加密库缺失","uid":"fe1448a608eca318d1350f71f4be1e8e","slug":"python/2023-09-28-Python加密库缺失","date":"2024-03-16T11:44:51.910Z","updated":"2024-03-16T11:44:51.910Z","comments":true,"path":"api/articles/python/2023-09-28-Python加密库缺失.json","cover":null,"text":"测试一下Obsidian 12cryptography is required for sha256_password or caching_sha2_password 原因是缺失了一个库。 12pip3 install setuptools_rustpip3 install c...","link":"","photos":[],"count_time":{"symbolsCount":704,"symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":2,"path":"api/categories/python.json"},{"name":"加密库","slug":"python/加密库","count":1,"path":"api/categories/python/加密库.json"}],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"iCloud的文件夹的位置","uid":"e564ce5c4856dfbed477325743829e87","slug":"other/iCloud的文件夹的位置","date":"2024-03-16T11:44:51.909Z","updated":"2024-03-16T11:44:51.909Z","comments":true,"path":"api/articles/other/iCloud的文件夹的位置.json","cover":null,"text":" iCloud的文件夹的位置 PC的iCloud的位置。 cd /Library/Mobile Documents/comapple~CloudDocs 手机上Obsidian文件夹的位置。 cd ~/Library/Mobile\\ Documents/iCloud~md~obs...","link":"","photos":[],"count_time":{"symbolsCount":203,"symbolsTime":"1 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"Ruby","slug":"Ruby","count":5,"path":"api/tags/Ruby.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"《动手学深度学习》","uid":"787f9d6e258fa139dbc5ec7521b6fde6","slug":"opensource/《动手学深度学习》","date":"2024-03-16T11:44:51.909Z","updated":"2024-03-16T11:44:51.909Z","comments":true,"path":"api/articles/opensource/《动手学深度学习》.json","cover":[],"text":" 《动手学深度学习》 推荐收藏（要学习哦）《动手学深度学习》 zh.d2l.ai 每个章节都是可以直接运行的 Jupyter 记事本，可以在本地直接运行，也可以克隆到 Google Colab 在云端运行。 推荐收藏（要学习哦）《动手学深度学习》 zh.d2l.ai 每个章节都是...","link":"","photos":[],"count_time":{"symbolsCount":198,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"计算机自学指南","uid":"acf07aee4ab1a89a03bfa1816ac12a9b","slug":"opensource/计算机自学指南","date":"2024-03-16T11:44:51.909Z","updated":"2024-03-16T11:44:51.909Z","comments":true,"path":"api/articles/opensource/计算机自学指南.json","cover":[],"text":" 计算机自学指南 Github榜首：北大学神整理最全面的计算机自学指南。这是一个系统的自学计算机的最优路径，北大新科的学长给我们做的很完美的不断迭代的CS学习规划。从必学工具、数学基础、软件基础等，由浅入深的带你走入计算机科学的领域。Computers are not magic...","link":"","photos":[],"count_time":{"symbolsCount":251,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"学家Maxime Labonne将微软的“小模型”Phi改造成了专家模型版本","uid":"2c1dca5ce015e081c739168114db673d","slug":"opensource/学家Maxime Labonne将微软的“小模型”Phi改造成了专家模型版本","date":"2024-03-16T11:44:51.909Z","updated":"2024-03-16T11:44:51.909Z","comments":true,"path":"api/articles/opensource/学家Maxime Labonne将微软的“小模型”Phi改造成了专家模型版本.json","cover":[],"text":" 学家Maxime Labonne将微软的“小模型”Phi改造成了专家模型版本 J.P.摩根的科学家Maxime Labonne将微软的“小模型”Phi，改造成了专家模型版本 2x2_8版本：huggingface点co/mlabonne/phixtral-2x2_8 42x2_...","link":"","photos":[],"count_time":{"symbolsCount":188,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}