{"title":"repeat...until 循环","uid":"17f717e08ff041fef49c1fa8a71c5669","slug":"lua/2016-06-01-repeat-until","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-repeat-until.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>#repeat…until 循环</p>\n<p>与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。<br />\n除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。</p>\n<p>##语法</p>\n<p>Lua 语言中 repeat…until 循环的语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repeat</span><br><span class=\"line\">   statement(s)</span><br><span class=\"line\">until( condition )</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">请注意，条件表达式出现在循环的结束处，所以在检查条件之前，循环体中语句 statement(s) 已经执行了一次。  </span><br><span class=\"line\">如果条件为假，则控制回到循环开始再次执行循环体。这个过程一直重复到条件为真时结束。</span><br><span class=\"line\"></span><br><span class=\"line\">##流程图  </span><br><span class=\"line\">![](images/repeat_until_loop.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">##示例  </span><br></pre></td></tr></table></figure>\n<p>–[ 局部变量定义 --]<br />\nlocal a = 10<br />\n–[ 重复循环执行 --]<br />\nrepeat<br />\nprint(“value of a:”, a)<br />\na = a + 1<br />\nuntil( a &gt; 15 )</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行上面的代码，将会得到如下的结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>value of a:\t10<br />\nvalue of a:\t11<br />\nvalue of a:\t12<br />\nvalue of a:\t13<br />\nvalue of a:\t14<br />\nvalue of a:\t15</p>\n<pre class=\"highlight\"><code class=\"\"></code></pre>\n","text":"#repeat…until 循环 与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。 除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。 ...","link":"","photos":[],"count_time":{"symbolsCount":596,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Table复制","uid":"f35637f6fb4f2abf97cdd32ce0593fe7","slug":"lua/luatest/Table复制","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/luatest/Table复制.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" Table复制 构造一个lua table变量，然后对这个变量在调用函数进行制和专递。 可以使用以下代码构造一个Lua table变量，并调用函数进行传递： 12345678910111213141516-- 构造一个Lua table变量local myTable = { n...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Lua","slug":"Lua","count":2,"path":"api/categories/Lua.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua标准库","uid":"fa374b256846497ad36372533ba9888a","slug":"lua/2016-06-01-standard-libraries","date":"2024-03-16T11:44:51.819Z","updated":"2024-03-16T11:44:51.819Z","comments":true,"path":"api/articles/lua/2016-06-01-standard-libraries.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" Lua 标准库 Lua 标准库利用 C 语言 API 实现并提供了丰富的函数，它们内置于 Lua 语言中。该标准库不仅可以提供 Lua 语言内服务，还能提供外部服务，比如文件或数据库的操作。 这些标准库使用标准的 C API 接口实现，它们作为独立的 C 语言模块提供给使用者。...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}