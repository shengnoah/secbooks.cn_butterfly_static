{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"lua/2016-06-11-for","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/2016-06-11-for.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<p>#Lua 中的 for 循环</p>\n<p>for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。</p>\n<p>##语法</p>\n<p>Lua 语言中 for 循环的语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for init,max/min value, increment</span><br><span class=\"line\">do</span><br><span class=\"line\">   statement(s)</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<p>下面是 for 循环执行的流程：</p>\n<ol>\n\t<li>init 首先执行并且只执行一次。在这一步骤中，你需要声明并初始化循环控制变量。\n\t</li>\n\t<li>接下来，max/min 是循环结束的条件。程序中将 init 与 最大值或最小值进行比较，条件为真则继续执行循环，否则结束循环。\n\t</li>\n\t<li>循环体执行后，程序跳转至递增或递减语句( increment/descrement )。此语句中，我们可以更新我们的控制变量。\n\t</li>\n\t<li>再次检查条件。如果条件为真，则执行循环并重复过程（执行循环体，递增运算，再检查条件）。当条件为假时，结束循环。\n\t</li>\n</ol>\n<p>##流程图<br />\n<img src=\"images/for_loop.jpg\" alt=\"\" /></p>\n<p>##示例</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i=10,1,-1 </span><br><span class=\"line\">do </span><br><span class=\"line\">   print(i) </span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<p>执行上面的代码后，将得到如下的输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">9</span><br><span class=\"line\">8</span><br><span class=\"line\">7</span><br><span class=\"line\">6</span><br><span class=\"line\">5</span><br><span class=\"line\">4</span><br><span class=\"line\">3</span><br><span class=\"line\">2</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n","text":"#Lua 中的 for 循环 for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 ##语法 Lua 语言中 for 循环的语法如下： 1234for init,max/min value, incrementdo statement(s)end 下面是 for 循...","link":"","photos":[],"count_time":{"symbolsCount":483,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":2,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":1,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":1,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":1,"path":"api/tags/basic.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"mac say文字转语音","uid":"fdaf3a4aaab4da898c02189280754dc0","slug":"mac/mac say文字转语音","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/mac/mac say文字转语音.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" mac say文字转语音 在 macOS 系统下，你可以使用内置的 say 命令将文本转换为语音1。以下是具体的步骤： 新建一个 TXT 文稿，我们取名为 my.txt，然后在 TXT 文件里写入你想要转换的内容，关闭保存1。 打开终端，输入 cd Documents 然后回车...","link":"","photos":[],"count_time":{"symbolsCount":280,"symbolsTime":"1 mins."},"categories":[{"name":"Mac","slug":"Mac","count":1,"path":"api/categories/Mac.json"}],"tags":[{"name":"Mac","slug":"Mac","count":1,"path":"api/tags/Mac.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"lua/2016-06-01-while","date":"2024-03-16T11:44:51.820Z","updated":"2024-03-16T11:44:51.820Z","comments":true,"path":"api/articles/lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"#Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 #语法 Lua 语言中 while 循环的语法如下所示： 1234567891011121314151617while(condit...","link":"","photos":[],"count_time":{"symbolsCount":627,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}