{"title":"SD安装失败的总结","uid":"05b362c6dec32eeac664da3321842b99","slug":"python/SD安装失败的总结","date":"2024-03-17T14:44:58.817Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/SD安装失败的总结.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"sd安装失败的总结\"><a class=\"markdownIt-Anchor\" href=\"#sd安装失败的总结\"></a> SD安装失败的总结</h1>\n<p>sd 安装过程</p>\n<p>1.下载webui<br />\ngit clone <a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui.git\">https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</a></p>\n<p>2.安装包下载太慢,可以指定清华源  -i <a href=\"http://pypi.tuna.tsinghua.edu.cn/simple\">http://pypi.tuna.tsinghua.edu.cn/simple</a> --trusted-host <a href=\"http://pypi.tuna.tsinghua.edu.cn\">pypi.tuna.tsinghua.edu.cn</a> --timeout=3000</p>\n<p>2.安装问题<br />\n1.Cannot locate TCMalloc (improves CPU memory usage)<br />\nyum install gperftools gperftools-devel</p>\n<p>2.一直卡着clip安装<br />\n修改stable-diffusion-webui/modules目录下的launch_utils.py文件，在<a href=\"https://github.xn--comhttps-n39l256ad0a7841d\">https://github.com前面加上https</a>😕/ghproxy.com/，不然国内服务器很容易下载失败</p>\n<p>例如：<a href=\"https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip\">https://ghproxy.com/https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip</a></p>\n<p>3.git Unknown option: -C<br />\n因为git版本比较低，需要大于1.8.5</p>\n<ol start=\"4\">\n<li class=\"lvl-5\">\n<p>Max retries exceeded with url: /openai/clip-vit-large-patch14/resolve/main/vocab.json (Caused by ConnectTimeoutError<br />\n下载clip-vit-large-patch14 文件到本地  g<br />\n解压后到stable diffusion 根目录 openai/clip-vit-large-patch14/**</p>\n</li>\n</ol>\n<p>5.配置端口和host<br />\n./webui.sh --xformers --listen --port 7860<br />\n–listen 将监听 0.0.0.0,保证别的机器可以访问本机</p>\n","text":" SD安装失败的总结 sd 安装过程 1.下载webui git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git 2.安装包下载太慢,可以指定清华源 -i http://pypi.tuna.tsi...","link":"","photos":[],"count_time":{"symbolsCount":897,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#sd%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%80%BB%E7%BB%93\"><span class=\"toc-text\"> SD安装失败的总结</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"哈佛大学的课程：“Python 数据科学简介”","uid":"519ee70fb3f13a4f693153edd0ae568d","slug":"python/哈佛大学的课程：“Python 数据科学简介”","date":"2024-03-17T14:44:58.821Z","updated":"2024-03-16T11:44:51.917Z","comments":true,"path":"api/articles/python/哈佛大学的课程：“Python 数据科学简介”.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":" 哈佛大学的课程：“Python 数据科学简介” 哈佛大学的课程：“Python 数据科学简介” 免费，但需要先熟悉 Python 才能学习本课程。 该课程适合初学者。它适合那些想要对机器学习和人工智能有基本了解的人。 该课程将涵盖其中一些主题： • 泛化和过度拟合 • 模型构建...","link":"","photos":[],"count_time":{"symbolsCount":323,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Python显示request请求的响应时间戳","uid":"02ac3d01366c7a352094c19df12c098f","slug":"python/Python显示request请求的响应时间戳","date":"2024-03-17T14:44:58.815Z","updated":"2024-03-16T11:44:51.911Z","comments":true,"path":"api/articles/python/Python显示request请求的响应时间戳.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" Python显示request请求的响应时间戳 Python显示request请求的响应时间戳 要显示Python的request请求的响应时间戳，可以使用time模块来获取请求开始和结束的时间，并计算它们之间的差异。以下是一个示例代码： 1234567891011121314...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"python","slug":"AIGC/python","count":1,"path":"api/categories/AIGC/python.json"}],"tags":[{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}