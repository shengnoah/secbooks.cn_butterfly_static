{"title":"lua的table复制copy","uid":"d63383a09ac480bfeab8c376afa1f147","slug":"old_topic/2016-09-17-385","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.892Z","comments":true,"path":"api/articles/old_topic/2016-09-17-385.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>源代码实现，来至于RESTY-HTTP</p>\n<p>代码如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Returns a new table, recursively copied from the one given.</span></span><br><span class=\"line\"><span class=\"comment\">--</span></span><br><span class=\"line\"><span class=\"comment\">-- @param   table   table to be copied</span></span><br><span class=\"line\"><span class=\"comment\">-- @return  table</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">tbl_copy</span><span class=\"params\">(orig)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> orig_type = <span class=\"built_in\">type</span>(orig)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> copy</span><br><span class=\"line\">    <span class=\"keyword\">if</span> orig_type == <span class=\"string\">&quot;table&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        copy = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> orig_key, orig_value <span class=\"keyword\">in</span> <span class=\"built_in\">next</span>, orig, <span class=\"literal\">nil</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">            copy[tbl_copy(orig_key)] = tbl_copy(orig_value)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"comment\">-- number, string, boolean, etc</span></span><br><span class=\"line\">        copy = orig</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> copy</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>","text":"源代码实现，来至于RESTY-HTTP 代码如下： 1234567891011121314151617-- Returns a new table, recursively copied from the one given.---- @param table table to ...","link":"","photos":[],"count_time":{"symbolsCount":522,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何在Openresty中实现一个REST服务","uid":"6f22cd23969a4d12ca816a42b73ce9e8","slug":"old_topic/2016-09-17-380","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.891Z","comments":true,"path":"api/articles/old_topic/2016-09-17-380.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 使用Blues框架在Openresty中实现一个REST服务解析和返回JSON数据，并通过curl向openresty服务器端请求rest，采用GET请求方式，提交一个json,然后路由到对应的匿名函数，通过request.params.body直接取得json数据主...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的Table的成员函数声明中的形参self","uid":"68ecc63ec79c9905410118253d04884f","slug":"old_topic/2016-09-17-382","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.891Z","comments":true,"path":"api/articles/old_topic/2016-09-17-382.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 Lua函数声明中的形参self Lua中有两种对Table结构的成员函数声明方式：“:“和”.”。 而对table的函数成员表量的调用也是这两种方试。 允许的： 第一种:用\".“声明函数，用”:\"调用用函数。函数调用时lua会把table变量本身做为第一个参数，传给这...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}