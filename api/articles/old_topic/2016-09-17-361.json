{"title":"MoonScript与ElasticSearch客户端","uid":"5f974a115cefd23be7d8b6092b3445d0","slug":"old_topic/2016-09-17-361","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.887Z","comments":true,"path":"api/articles/old_topic/2016-09-17-361.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>从Github上看，有一位叫做Dhaval Kapil老师完成了ElasticSearch for Lua的工作，另一位来自阿根廷的叫做Cristian Haunsen的老师，完成了ElasticSearch for Lapis的客户端程序写作工作,dhavalkapil还有一个博客可以访问：<a href=\"http://dhavalkapil.com\">dhavalkapil.com</a></p>\n<p>这次实验的目标，是测试一下本地直接运行ES for Lua，然后在Lapis中访问ES，我们的日志在ES，可以用Lua，也可以用Python完成ES的访问工作， Python没有问题，Lua就看这个实验了。</p>\n<p>测试代码，如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> elasticsearch = <span class=\"built_in\">require</span> <span class=\"string\">&quot;elasticsearch&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> client = elasticsearch.client&#123;</span><br><span class=\"line\">    hosts = &#123;</span><br><span class=\"line\">      &#123; <span class=\"comment\">-- Ignoring any of the following hosts parameters is allowed.</span></span><br><span class=\"line\">        <span class=\"comment\">-- The default shall be set</span></span><br><span class=\"line\">        protocol = <span class=\"string\">&quot;http&quot;</span>,</span><br><span class=\"line\">        host = <span class=\"string\">&quot;localhost&quot;</span>,</span><br><span class=\"line\">        port = <span class=\"number\">9200</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">-- Optional parameters</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">      pingTimeout = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Will connect to default host/port</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> client = elasticsearch.client()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> data, err = client:info()</span><br></pre></td></tr></table></figure>\n<p>Full list of params（全参数列表）:</p>\n<ol>\n<li class=\"lvl-3\">\n<p>pingTimeout : The timeout of a connection for ping and sniff request. Default is 1.</p>\n</li>\n<li class=\"lvl-3\">\n<p>selector : The type of selection strategy to be used. Default is RoundRobinSelector.</p>\n</li>\n<li class=\"lvl-3\">\n<p>connectionPool : The type of connection pool to be used. Default is StaticConnectionPool.</p>\n</li>\n<li class=\"lvl-3\">\n<p>connectionPoolSettings : The connection pool settings,</p>\n</li>\n<li class=\"lvl-3\">\n<p>maxRetryCount : The maximum times to retry if a particular connection fails.</p>\n</li>\n<li class=\"lvl-3\">\n<p>logLevel : The level of logging to be done. Default is warning.</p>\n</li>\n</ol>\n<h4 id=\"getting-info-of-elasticsearch-server取得es服务器信息\"><a class=\"markdownIt-Anchor\" href=\"#getting-info-of-elasticsearch-server取得es服务器信息\"></a> Getting info of elasticsearch server（取得ES服务器信息）</h4>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> data, err = client:info()</span><br></pre></td></tr></table></figure>\n<h4 id=\"index-a-document创建索引文档\"><a class=\"markdownIt-Anchor\" href=\"#index-a-document创建索引文档\"></a> Index a document（创建索引文档）</h4>\n<p>Everything is represented as a lua table.(一切皆为Lua Table)</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> data, err = client:index&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  id = <span class=\"string\">&quot;my_doc&quot;</span>,</span><br><span class=\"line\">  body = &#123;</span><br><span class=\"line\">    my_key = <span class=\"string\">&quot;my_param&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"get-a-document取得文档\"><a class=\"markdownIt-Anchor\" href=\"#get-a-document取得文档\"></a> Get a document（取得文档）</h4>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, err = client:get&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  id = <span class=\"string\">&quot;my_doc&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"delete-a-document删除文档\"><a class=\"markdownIt-Anchor\" href=\"#delete-a-document删除文档\"></a> Delete a document（删除文档）</h4>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, err = client:delete&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  id = <span class=\"string\">&quot;my_doc&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"searching-a-document-检索文档\"><a class=\"markdownIt-Anchor\" href=\"#searching-a-document-检索文档\"></a> Searching a document （检索文档）</h4>\n<p>You can search a document using either query string:（使有查询字符进行检索）</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, err = client:search&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  q = <span class=\"string\">&quot;my_key:my_param&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"or-either-a-request-body或是请求体\"><a class=\"markdownIt-Anchor\" href=\"#or-either-a-request-body或是请求体\"></a> Or either a request body:(或是请求体)</h4>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, err = client:search&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  body = &#123;</span><br><span class=\"line\">    query = &#123;</span><br><span class=\"line\">      <span class=\"built_in\">match</span> = &#123;</span><br><span class=\"line\">        my_key = <span class=\"string\">&quot;my_param&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"update-a-document更新文档\"><a class=\"markdownIt-Anchor\" href=\"#update-a-document更新文档\"></a> Update a document（更新文档）</h4>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data, err = client:update&#123;</span><br><span class=\"line\">  index = <span class=\"string\">&quot;my_index&quot;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">type</span> = <span class=\"string\">&quot;my_type&quot;</span>,</span><br><span class=\"line\">  id = <span class=\"string\">&quot;my_doc&quot;</span>,</span><br><span class=\"line\">  body = &#123;</span><br><span class=\"line\">    doc = &#123;</span><br><span class=\"line\">      my_key = <span class=\"string\">&quot;new_param&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实MoonScript for ElasticSearch的库是一个纯正的MoonScript实现，但从Readme中描述<br />\n是没显明的看是用MoonScript实现，不防抽出的MoonScript核心实现，贴出来看一下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client = elasticsearch.client &#123;</span><br><span class=\"line\">    hosts: <span class=\"built_in\">config</span>.elasticsearch.hosts <span class=\"keyword\">and</span> parse_hosts_config(<span class=\"built_in\">config</span>.elasticsearch.hosts) <span class=\"keyword\">or</span> &#123;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            protocol: <span class=\"string\">&quot;http&quot;</span></span><br><span class=\"line\">            host: <span class=\"string\">&quot;127.0.0.1&quot;</span></span><br><span class=\"line\">            port: <span class=\"number\">9200</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    params: &#123;</span><br><span class=\"line\">        <span class=\"comment\">-- Should return a table with &#123; status, statusCode, body &#125;</span></span><br><span class=\"line\">        preferred_engine: (method, uri, params, body, timeout) -&gt;</span><br><span class=\"line\">            http = <span class=\"built_in\">require</span> <span class=\"string\">&quot;resty.http&quot;</span></span><br><span class=\"line\">            httpc = http.new!</span><br><span class=\"line\">            args = &#123; :method, :body, headers: &#123; [<span class=\"string\">&quot;Content-Type&quot;</span>]: <span class=\"string\">&quot;application/json&quot;</span> &#125; &#125;</span><br><span class=\"line\">            res, err = httpc\\request_uri(uri, args)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res</span><br><span class=\"line\">                ngx.say(<span class=\"string\">&quot;failed to request: &quot;</span>, err)</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">            response = &#123;&#125;</span><br><span class=\"line\">            response.code = res.<span class=\"built_in\">status</span></span><br><span class=\"line\">            response.statusCode = res.<span class=\"built_in\">status</span></span><br><span class=\"line\">            response.body = res.body</span><br><span class=\"line\">            <span class=\"keyword\">return</span> response</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  :interpolate_query, :client</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>API封装以外，用的还是&quot;resty.http&quot;调用，这里有一个疑问，resty.http和simple.http是<br />\n不是同一个部件？</p>\n<p><a href=\"http://lua.ren/topic/270/elasticsearch%E7%9A%84lua%E5%AE%A2%E6%88%B7%E7%AB%AF\">原文</a></p>\n<p><a href=\"https://github.com/CriztianiX/lapis-elasticsearch\">lapis-elasticsearch</a></p>\n<p>PS：本文测式用代码都来自至官方ES-LUA的Github的Readme。</p>\n","text":"作者：糖果 从Github上看，有一位叫做Dhaval Kapil老师完成了ElasticSearch for Lua的工作，另一位来自阿根廷的叫做Cristian Haunsen的老师，完成了ElasticSearch for Lapis的客户端程序写作工作,dhavalkap...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#getting-info-of-elasticsearch-server%E5%8F%96%E5%BE%97es%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\"> Getting info of elasticsearch server（取得ES服务器信息）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#index-a-document%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> Index a document（创建索引文档）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#get-a-document%E5%8F%96%E5%BE%97%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> Get a document（取得文档）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#delete-a-document%E5%88%A0%E9%99%A4%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> Delete a document（删除文档）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#searching-a-document-%E6%A3%80%E7%B4%A2%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> Searching a document （检索文档）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#or-either-a-request-body%E6%88%96%E6%98%AF%E8%AF%B7%E6%B1%82%E4%BD%93\"><span class=\"toc-text\"> Or either a request body:(或是请求体)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#update-a-document%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> Update a document（更新文档）</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Django Guide","uid":"6621c44acdf5f08884e1627cc08cfbf8","slug":"old_topic/2016-09-17-36","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.887Z","comments":true,"path":"api/articles/old_topic/2016-09-17-36.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"给Django做一个索引。 Form http://www.djangobook.com/en/2.0/chapter07.html 打字少，功能实现快。 开发备忘录 1.创建空工程 django-admin.py startproject djproject 2.创建空应用 p...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript版的Ngx.Timer","uid":"05d6f9c12a393c22bb876b3b1fe14cf0","slug":"old_topic/2016-09-17-364","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.887Z","comments":true,"path":"api/articles/old_topic/2016-09-17-364.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 实际如果是直接调用ngx.timer的API，moonscript和lua的ngx.timer的函数写法差别不是很大。 candylab.moon 123456789handler = (fill, params)-> ok, err = ngx.timer.at(1...","link":"","photos":[],"count_time":{"symbolsCount":786,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}