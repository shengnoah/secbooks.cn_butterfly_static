{"title":"LUA如何遍历返回的JSON数据","uid":"222b2df1d56a571ace7dc7573b0f68fd","slug":"old_topic/2016-09-17-132","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.840Z","comments":true,"path":"api/articles/old_topic/2016-09-17-132.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>代码如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_json_key</span><span class=\"params\">(key)</span></span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> key <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">local</span> json_var = client:get(key)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> json_var <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">local</span> var = json.decode(json_var)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> var</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> list = get_json_key(<span class=\"string\">&quot;temp_xxx_key&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">local</span> tmp_ip = &#123; ip &#125;</span><br><span class=\"line\">        <span class=\"keyword\">local</span> new_flg = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, var <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(list) <span class=\"keyword\">do</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> var[<span class=\"number\">1</span>] == ip <span class=\"keyword\">then</span></span><br><span class=\"line\">                  new_flg = <span class=\"literal\">false</span></span><br><span class=\"line\">                  <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>值得注意的一点是，lua的json库不是唯一，有json,cjosn,josnrpc等，本篇使用的标标准的用luarocks安装的json库，不同的库调用方式也是不一样的。</p>\n<p>下面是一位网友的问题：<br />\n遍历所有的table元素。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fc_info = [&#123;<span class=\"string\">&quot;daytext&quot;</span>:<span class=\"string\">&quot;Cloudy&quot;</span>&#125;，&#123;<span class=\"string\">&quot;daytext&quot;</span>:<span class=\"string\">&quot;Cloudy&quot;</span>&#125;，&#123;<span class=\"string\">&quot;daytext&quot;</span>:<span class=\"string\">&quot;Cloudy&quot;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> data = cjson.decode(sampleJson);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> length = <span class=\"built_in\">table</span>.<span class=\"built_in\">getn</span>(fc_info)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,length <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t\t\tsay(<span class=\"string\">&quot;daytext=====&quot;</span>..fc_info[i][<span class=\"string\">&quot;daytext&quot;</span>])</span><br><span class=\"line\"><span class=\"keyword\">end</span>\t</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","text":"作者：糖果 代码如下： 12345678910111213141516171819202122232425function get_json_key(key) if not key then return end local json_var = client:get(key) ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"},{"name":"lua json","slug":"lua-json","count":1,"path":"api/tags/lua-json.json"},{"name":"lua循环","slug":"lua循环","count":1,"path":"api/tags/lua循环.json"},{"name":"lua循环遍历","slug":"lua循环遍历","count":1,"path":"api/tags/lua循环遍历.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用ZeroBrane远程在线调试Openresty, Nginx的Lua程序","uid":"24bcb0d528509f76dbffa1fbd58c1141","slug":"old_topic/2016-09-17-126","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.840Z","comments":true,"path":"api/articles/old_topic/2016-09-17-126.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"作者：糖果 ZeroBrane是一个开源的Lua编辑器IDE,自带Lua运行程序和基本的库。最主要的一点，就是ZB可以远程在线的调试，nginx或是openresty上运行的lua脚本。 在编辑方面可以和VIM及插件互补，多去一句，如果花点时间，给VIM按装补全插件，目录插件，t...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"NGINX配置初始化过程","uid":"e77113c5554b3f904d7fab1c518f6770","slug":"old_topic/2016-09-17-134","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.840Z","comments":true,"path":"api/articles/old_topic/2016-09-17-134.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"nginx解析配置文件，将解析出来得配置存放在ngx_cycle_s的conf_ctx中，conf_ctx是个四级指针，因为保存这些配置需要context，而这些context是有层级关系，最终的配置结构如图： 图片：27767798_1370416906jegE.png htt...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}