{"title":"helloworld","uid":"7feb1bc48352a2bd04c7a6d1cf8eb726","slug":"old_topic/2016-09-17-314","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.876Z","comments":true,"path":"api/articles/old_topic/2016-09-17-314.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<h1 id=\"helloworld\"><a class=\"markdownIt-Anchor\" href=\"#helloworld\"></a> HelloWorld</h1>\n<p><code>HelloWorld</code> 是我们亘古不变的第一个入门程序。但是 <code>OpenResty</code> 不是一门编程语言，跟其他编程语言的 <code>HelloWorld</code> 不一样，让我们看看都有哪些不一样吧。</p>\n<h4 id=\"创建工作目录\"><a class=\"markdownIt-Anchor\" href=\"#创建工作目录\"></a> 创建工作目录</h4>\n<p>OpenResty 安装之后就有配置文件及相关的目录的，为了工作目录与安装目录互不干扰，并顺便学下简单的配置文件编写，我们另外创建一个 OpenResty 的工作目录来练习，并且另写一个配置文件。我选择在当前用户目录下创建 openresty-test 目录，并在该目录下创建 logs 和 conf 子目录分别用于存放日志和配置文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"><span class=\"built_in\">mkdir</span> ~/openresty-test ~/openresty-test/logs/ ~/openresty-test/conf/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">$ tree ~/openresty-test</span></span><br><span class=\"line\">/Users/yuansheng/openresty-test</span><br><span class=\"line\">├── conf</span><br><span class=\"line\">└── logs</span><br><span class=\"line\"></span><br><span class=\"line\">2 directories, 0 files</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建配置文件\"></a> 创建配置文件</h4>\n<p>在 conf 目录下创建一个文本文件作为配置文件，命名为 nginx.conf，文件内容如下:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;        <span class=\"comment\">#nginx worker 数量</span></span><br><span class=\"line\"><span class=\"attribute\">error_log</span> logs/<span class=\"literal\">error</span>.log;   <span class=\"comment\">#指定错误日志文件路径</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">#监听端口，若你的6699端口已经被占用，则需要修改</span></span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">6699</span>;</span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123;</span><br><span class=\"line\">            <span class=\"attribute\">default_type</span> text/html;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"section\">content_by_lua_block</span> &#123;</span><br><span class=\"line\">                ngx.say(&quot;HelloWorld&quot;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>提示：openresty 1.9.3.1 及以下版本，请使用 content_by_lua 命令；在 openresty 1.9.3.2 以上，content_by_lua 改成了 content_by_lua_block。可使用 nginx -V 命令查看版本号。</p>\n<h4 id=\"万事俱备只欠东风\"><a class=\"markdownIt-Anchor\" href=\"#万事俱备只欠东风\"></a> 万事俱备只欠东风</h4>\n<p>我们启动 nginx 即可，输入命令形式为：<code>nginx -p ~/openresty-test</code>，如果没有提示错误。如果提示 nginx 不存在，则需要在环境变量中加入安装路径，可以根据你的操作平台，参考前面的安装章节（一般需要重启生效）。</p>\n<p>启动成功后，我们可以查看 nginx 进程是否存在，并通过访问 HTTP 页面查看应答内容。操作提示如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ nginx -p ~/openresty-test</span><br><span class=\"line\">➜  ~ ps -ef | grep nginx</span><br><span class=\"line\">  501 88620     1   0 10:58AM ?? 0:00.00 nginx: master process nginx -p</span><br><span class=\"line\">                                    /Users/yuansheng/openresty-test</span><br><span class=\"line\">  501 88622 88620   0 10:58AM ?? 0:00.00 nginx: worker process</span><br><span class=\"line\">➜  ~ curl http://localhost:6699 -i</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Server: openresty/1.9.7.3</span><br><span class=\"line\">Date: Sun, 20 Mar 2016 03:01:35 GMT</span><br><span class=\"line\">Content-Type: text/html</span><br><span class=\"line\">Transfer-Encoding: chunked</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\"></span><br><span class=\"line\">HelloWorld</span><br></pre></td></tr></table></figure>\n<p>在浏览器中完成同样的访问：</p>\n<p><img src=\"../images/first_helloworld.png\" alt=\"\" /></p>\n","text":" HelloWorld HelloWorld 是我们亘古不变的第一个入门程序。但是 OpenResty 不是一门编程语言，跟其他编程语言的 HelloWorld 不一样，让我们看看都有哪些不一样吧。 创建工作目录 OpenResty 安装之后就有配置文件及相关的目录的，为了工作目...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#helloworld\"><span class=\"toc-text\"> HelloWorld</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\"> 创建工作目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\"> 创建配置文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%87%E4%BA%8B%E4%BF%B1%E5%A4%87%E5%8F%AA%E6%AC%A0%E4%B8%9C%E9%A3%8E\"><span class=\"toc-text\"> 万事俱备只欠东风</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"简单API Server框架","uid":"00e0afc1c0a95123fda2364773b4d3e8","slug":"old_topic/2016-09-17-316","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.876Z","comments":true,"path":"api/articles/old_topic/2016-09-17-316.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" 简单API Server框架 实现一个最最简单的数学计算：加、减、乘、除，给大家演示如何搭建简单的 API Server。 按照前面几章的写法，先来看看加法、减法示例代码： 1234567891011121314151617181920212223242526272829303...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"获取 uri 参数","uid":"d5ff1ed8ad9b9d2c1a73f4d27ebd5027","slug":"old_topic/2016-09-17-318","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.877Z","comments":true,"path":"api/articles/old_topic/2016-09-17-318.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" 获取 uri 参数 上一章节，主要介绍了一下如何使用不同 location 进行协作，对 location 进行糅合，往往都是要需要参数的二次调整。如何正确获取传递参数、设置参数，就是你的必修课了。本章目的是给出在 OpenResty 的世界中，我们如何正确获取、设置 uri ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}