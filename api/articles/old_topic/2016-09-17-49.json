{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"old_topic/2016-09-17-49","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.895Z","comments":true,"path":"api/articles/old_topic/2016-09-17-49.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">bseek</span><span class=\"params\">(<span class=\"type\">int</span> key)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> high = (<span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>) / <span class=\"number\">4</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> mid = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> ret = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high) &#123;</span><br><span class=\"line\">                mid = (low + high) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (key == <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        ret = mid;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &lt; <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        high = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &gt; <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        low = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span>* argv[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[0]:%d\\n&quot;</span>, bseek(<span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[1]:%d\\n&quot;</span>, bseek(<span class=\"number\">1</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[2]:%d\\n&quot;</span>, bseek(<span class=\"number\">2</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[3]:%d\\n&quot;</span>, bseek(<span class=\"number\">3</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[4]:%d\\n&quot;</span>, bseek(<span class=\"number\">4</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[5]:%d\\n&quot;</span>, bseek(<span class=\"number\">5</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[6]:%d\\n&quot;</span>, bseek(<span class=\"number\">6</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[7]:%d\\n&quot;</span>, bseek(<span class=\"number\">7</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[8]:%d\\n&quot;</span>, bseek(<span class=\"number\">8</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[9]:%d\\n&quot;</span>, bseek(<span class=\"number\">9</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[10]:%d\\n&quot;</span>, bseek(<span class=\"number\">10</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[11]:%d\\n&quot;</span>, bseek(<span class=\"number\">11</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre class=\"highlight\"><code class=\"lua\">list  = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>]\nlow = <span class=\"number\">0</span>\nhigh = <span class=\"built_in\">len</span>(list) - <span class=\"number\">1</span>\nidx = <span class=\"number\">0</span>\n\ndef bseek(key):\n        global low\n        global high\n        global idx\n        <span class=\"keyword\">while</span>(low &lt;= high):\n                mid = (low + high) / <span class=\"number\">2</span>\n                <span class=\"keyword\">if</span> (key == list[mid]):\n                        idx = mid\n                        <span class=\"keyword\">break</span>\n                elif(key &lt; list[mid]):\n                        high = mid - <span class=\"number\">1</span>\n                elif(key &gt; list[mid]):\n                        low = mid + <span class=\"number\">1</span>\n\nbseek(<span class=\"number\">6</span>)\n<span class=\"built_in\">print</span> idx\n           \n</code></pre>\n","text":"12345678910111213141516171819202122232425262728293031323334353637383940#include<stdio.h>int bseek(int key) { int array[10] = {1,2,3,4,5,6,7,...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"},{"name":"折半查找","slug":"折半查找","count":2,"path":"api/tags/折半查找.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"},{"name":"lua二分查找","slug":"lua二分查找","count":2,"path":"api/tags/lua二分查找.json"},{"name":"c","slug":"c","count":2,"path":"api/tags/c.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python和C++混合使用QML开发GUI","uid":"0cb9b7f667542d54e27810e7e909c462","slug":"old_topic/2016-09-17-46","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.895Z","comments":true,"path":"api/articles/old_topic/2016-09-17-46.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 pyqt和qml结合的中文资很少，在baidu上搜索，基本上就是浪费时间。在国外的blog上，有零星的几篇，但是介绍好的少。在stackoverflow上看到一篇关于pyside，发现pyside，发现pyside果然给力，那就开始我们的pyside游戏之旅吧。 【编...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SWIFT之旅","uid":"588827ea99547898fdc61cb9e0f76523","slug":"old_topic/2016-09-17-53","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.896Z","comments":true,"path":"api/articles/old_topic/2016-09-17-53.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"对于一个新语言的第一个程序来说，比较传统的搞法是，在屏幕上，打印一行”hello,word” 。看看swift吧，一行语句就能搞定。 println(“Hello, world”) 如果你之前玩过C或是Objective-C, Swift的这种语法你可能眼熟。这一行代码就完成了这...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}