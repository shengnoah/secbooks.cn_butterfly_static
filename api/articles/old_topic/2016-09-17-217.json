{"title":"使用Pages服务创建静态博客(下)---部署Jekyll静态站","uid":"708c3ab643b3760bed43ade6e846877c","slug":"old_topic/2016-09-17-217","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.856Z","comments":true,"path":"api/articles/old_topic/2016-09-17-217.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<p>作者：糖果</p>\n<p>上一篇我们在Coding.net上部署了Pages服务，但是展示的页面比较单一，这次我们使用Jekyll工程生成一个相对完整的静态网站。</p>\n<h3>概要步骤如下：</h3> \n<ul>\n1.安装较新的Ruby开发环境。</ul>\n<ul>\n2.安装Jekyll。</ul>\n<ul>\n3.创建工程。</ul>\n<ul>\n4.上传代码。</ul>\n<ul>\n5.确认站点。</ul>\n<ul>\n</ul>\n<h3>1.安装较新的Ruby开发环境。</h3> \n因为Jekyll是依赖Ruby开发环境的，所以首先要装的是Ruby开发环境。\n<h4>1.1 本地安装Ruby。</h4> \n在Ubuntu15上，简单的两部就可以安装完成。\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ruby</span><br></pre></td></tr></table></figure>\n<p>这样默认装的是Ruby2.2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby -v</span><br></pre></td></tr></table></figure>\n<p>安装ruby2.2-dev,有了这个包可见ruby.h等后继需要的文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ruby2.2-dev</span><br></pre></td></tr></table></figure>\n<h4>1.2 VPS上安装。</h4> \n在阿里这种VPS上安装Ruby，推荐使用RVM安装方式。\n<h5>1.2.1 安装curl，下载RVM。</h5> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get curl</span><br><span class=\"line\">curl -L https://get.rvm.io | bash -s stable</span><br><span class=\"line\">source ~/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>\n<h5>1.2.2 安装RVM依赖</h5> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm requirements</span><br></pre></td></tr></table></figure>\n<h5>1.2.3 安装Ruby</h5> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install ruby</span><br><span class=\"line\">rvm use ruby --default</span><br></pre></td></tr></table></figure>\n<h3>2.安装Jekyll。</h3> \n安装Jekyll之前，记得要把gem的安装源换成淘宝的，你懂。\n<h4>2.1更新gem源。</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem sources --remove http://rubygems.org/</span><br><span class=\"line\">gem sources --add https://ruby.taobao.org/</span><br><span class=\"line\">gem sources -l</span><br></pre></td></tr></table></figure>\n<h4>2.2安装Jekyll</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install jekyll</span><br></pre></td></tr></table></figure>\n<h3>3.创建工程。</h3> \n创建一个Jekyll的静态站，自动生成。\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jekyll new moonscript</span><br></pre></td></tr></table></figure>\n<h3>4.上传代码。</h3> \n把新生成的所有代码文件和文件夹，全部移动到Pages服务部署文件所在有分支文件夹。\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add *</span><br><span class=\"line\">git commit -m&quot;将自动生成的文件全部上传到coding-pages分支上&quot;</span><br><span class=\"line\">git push origin coding-pages</span><br></pre></td></tr></table></figure>\n<h3>5.确认站点。</h3> \n<p><a href=\"http://moonscript.cn\" target=\"_blank\">moonscript.cn</a></p>\n<p>图片：moonscript.png<br />\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455544078.png\" alt=\"moonscript.png\" /></p>\n<p>在更新coding.net的jekyll文章时，有一个关键的文件要更新，就是feed.xml这个文件。</p>\n<p>原文来至糖果实验室</p>\n<p>作者：糖果<br />\nPS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。<br />\nLUA.REN<br />\n<a href=\"http://www.lua.ren\">http://www.lua.ren</a></p>\n","text":"作者：糖果 上一篇我们在Coding.net上部署了Pages服务，但是展示的页面比较单一，这次我们使用Jekyll工程生成一个相对完整的静态网站。 概要步骤如下： 1.安装较新的Ruby开发环境。 2.安装Jekyll。 3.创建工程。 4.上传代码。 5.确认站点。 1.安装...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">概要步骤如下：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">1.安装较新的Ruby开发环境。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.1 本地安装Ruby。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.2 VPS上安装。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.1 安装curl，下载RVM。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.2 安装RVM依赖</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.3 安装Ruby</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">2.安装Jekyll。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">2.1更新gem源。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">2.2安装Jekyll</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">3.创建工程。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">4.上传代码。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">5.确认站点。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用Pages服务创建静态博客(上)","uid":"a8389061bbd1e9023a83242f7e76acdb","slug":"old_topic/2016-09-17-215","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.855Z","comments":true,"path":"api/articles/old_topic/2016-09-17-215.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"作者：糖果 Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。 创建步骤： 配置本地git环境。 本地创建目录结构和静态文件。 初始化本地目录为git工程，创建本地分支，并上传文件。 启动配置coding上的pages，...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Sublime的LUA和Openresty插件。","uid":"270916a1da291606f4da9f2bca1552a5","slug":"old_topic/2016-09-17-219","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-16T11:44:51.856Z","comments":true,"path":"api/articles/old_topic/2016-09-17-219.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 下面是两个补全插件，在Sublime中可以很好的补全LUA代码和OpenResty的API。 Lua插件 installation Openresty的补全 ","link":"","photos":[],"count_time":{"symbolsCount":85,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}